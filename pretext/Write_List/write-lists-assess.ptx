<section xml:id="write-lists_assessment" xmlns:xi="http://www.w3.org/2001/XInclude" xml:lang="en-US">
    <title>Assessment: Write Lists</title>
    <xi:include href='./subgoals_write_list.ptx' />
<exercises time-limit="10" pause="no">
    <TimedNode line="24" runestone_options="{'nofeedback': None, 'subchapter': 'write-lists_assessment', 'chapter': 'WriteLists', 'basecourse': 'Subgoals', 'optional': '', 'optclass': '', 'divid': 'assess-write-lists', 'qnumber': '', 'question_marker': '9.12.1'}" source="Lists/lists-assess3.rst">

        <exercise xml:id="assess-write-lists-1-1">
    <statement>
        <p>Q1: The following function is intended to return a string formed by concatenating elements from the parameter <c>words</c>. The elements to be concatenated start with <c>start_index</c> and continue through the last element of <c>words</c> and should appear in reverse order in the resulting string.</p>
        <program language="python">
            <input>
# Assume len(words) > 0 and start_index >= 0
def concat_words(words, start_index):
    result = ""
    # missing code
    return result
            </input>
        </program>
        <p>For example, the following code segment should print <code>CarHouseGorilla</code>:</p>
        <program language="python">
            <input>
things = ["Bear", "Apple", "Gorilla", "House", "Car"]
print(concat_words(things, 2))
            </input>
        </program>
        <p>Which of the following code segments is a correct replacement for <c># missing code</c>?</p>
        <p><strong>I.</strong></p>
        <program language="python">
            <input>
for k in range(start_index, len(words)):
    result += words[k] + words[len(words) - k - 1]
            </input>
        </program>

        <p><strong>II.</strong></p>
        <program language="python">
            <input>
k = len(words) - 1
while k >= start_index:
    result += words[k]
    k -= 1
            </input>
        </program>

        <p><strong>III.</strong></p>
        <program language="python">
            <input>
temp = words.copy()
temp.reverse()
for k in range(len(temp) - start_index):
    result += temp[k]
            </input>
        </program>
    </statement>

    <choices>
        <choice>
            <statement><p>I only</p></statement>
        </choice>
        <choice>
            <statement><p>II only</p></statement>
        </choice>
        <choice>
            <statement><p>III only</p></statement>
        </choice>
        <choice>
            <statement><p>I and II only</p></statement>
        </choice>
        <choice correct="yes">
            <statement><p>II and III only</p></statement>
        </choice>
    </choices>
</exercise>


        <exercise xml:id="assess-write-lists-1-2">
            <statement>
                <p>Q2: Consider the following two functions. What is printed as a result of the call <c>start()</c>?</p>
                <program language="python">
                    <input>
def change_it(lst, num):
    lst = []
    num = 0
    lst.append("Zero")

def start():
    words = ["One", "Two"]
    value = 6
    change_it(words, value)
    print(words, value)
                    </input>
                </program>
            </statement>
            <choices>
                <choice>
                    <statement><p>['Zero'] 0</p></statement>
                </choice>
                <choice>
                    <statement><p>[] 0</p></statement>
                </choice>
                <choice>
                    <statement><p>[] 6</p></statement>
                </choice>
                <choice correct="yes">
                    <statement><p>['One', 'Two'] 6</p></statement>
                </choice>
                <choice>
                    <statement><p>['One', 'Two', 'Zero'] 0</p></statement>
                </choice>
            </choices>
        </exercise>

        <exercise xml:id="assess-write-lists-1-3">
            <statement>
                <p>Q3: Consider the following two functions. What is printed as a result of the call <c>start()</c>?</p>
                <program language="python">
                    <input>
def modify_list(lst, word):
    lst.append(word[:5])
    word = "Changed"

def start():
    items = ["Red", "Blue"]
    label = "Magenta"
    modify_list(items, label)
    print(items, label)
                    </input>
                </program>
            </statement>
            <choices>
                <choice correct="yes">
                    <statement><p>['Red', 'Blue', 'Magen'] Magenta</p></statement>
                </choice>
                <choice>
                    <statement><p>['Red', 'Blue', 'Changed'] Changed</p></statement>
                </choice>
                <choice>
                    <statement><p>['Red', 'Blue'] Magenta</p></statement>
                </choice>
                <choice>
                    <statement><p>['Red', 'Blue'] Changed</p></statement>
                </choice>
                <choice>
                    <statement><p>['Magen'] Magenta</p></statement>
                </choice>
            </choices>
        </exercise>
    </TimedNode>
</exercises>
</section>