<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="conditional-wss-p1" xmlns:xi="http://www.w3.org/2001/XInclude" xml:lang="en-US"> 
        <title>WriteSelection-WE2-P1</title>
        <xi:include href='./subgoals_write_selection_statements.ptx' />
        <transition/>
        <subsection>
            <title>WrSelect-WE2-P1</title>
    <exercises>
    <exercise xml:id="parsons-WrSelect-WE2-P1-5" indent="show" language="python"><statement>
                <p>Put the code in the right order to create a program that will generate an integer value between 0 and 25, 
                    print the value, and if the value is greater than 18, print a message saying &#8220;This is an overload&#8221;; 
                    otherwise print a message saying &#8220;Not an overload&#8221;.</p>
    </statement>
    <blocks><block order="7">
        <cline>import random</cline>
        <cline>def main(args: [str]):</cline>
        </block><block order="2">
        <cline>      x = random.randint(0, 25)</cline>
        <cline>      print(x)</cline>
        </block><block order="5">
        <cline>      if (x &gt; 18):</cline>
        </block><block order="4">
        <cline>         print("This is an overload.")</cline>
        </block><block order="3">
        <cline>      else:</cline>
        </block><block order="6">
        <cline>         print("Not an overload.")</cline>
        </block><block order="1">
    </block></blocks></exercise><exercise xml:id="parsons-WrSelect-WE2-P1-6" indent="show" language="python"><statement>
                <p>Put the code in the right order to create a program that will generate an integer value between 3 and 7, 
                    print the value, and if the value is equal to 5 then set the character variable classType equal to &#8216;G&#8217;, 
                    and print a message saying &#8220;graduate student&#8221;; otherwise set classType equal to &#8216;U&#8217; and print 
                    a message saying &#8220;undergraduate&#8221;.</p>
    </statement>
    <blocks><block order="4">
        <cline>import random</cline>
        <cline>def main(args: [str]):</cline>
        </block><block order="7">
        <cline>      classType = 'x'</cline>
        <cline>      x = 3 + random.randint(0, 4)</cline>
        <cline>      print(x)</cline>
    </block><block order="3">
        <cline>      if (x == 5):</cline>
    </block><block order="1">
        <cline>         classType = 'G'</cline>
        <cline>         print("graduate student")</cline>
    </block><block order="2">
        <cline>      else:</cline>
    </block><block order="6">
        <cline>         classType = 'U'</cline>
        <cline>         print("undergraduate student")</cline>
    </block><block order="5">
    </block></blocks></exercise><exercise xml:id="parsons-WrSelect-WE2-P1-7" indent="show" language="python"><statement>
                <p>Put the code in the right order to create a program that will generate the value for a year (1500 to 3000 inclusive) and print the value. 
                    Then it will print <em>true</em> if the year is a leap year, otherwise the program prints <em>false</em>. A leap year is a multiple of 4, 
                    with one exception: if the year is a multiple of 100 but <em>not</em> 400, then it is <em>not</em> a leap year. For example, the year 1900 
                    was not a leap year, but the year 2000 was indeed a leap year.</p>
    </statement>
    <blocks><block order="8">
        <cline>import random</cline>
        <cline>def main(args: [str]):</cline>
    </block><block order="6">
        <cline>      x = 1500 + random.randint(0, 1500)</cline>
        <cline>      result = false</cline>
    </block><block order="4">
        <cline>      print(x)</cline>
    </block><block order="2">
        <cline>      if (x % 4 == 0):</cline>
    </block><block order="1">
        <cline>         if (x % 100 == 0):</cline>
    </block><block order="3">
        <cline>            if (x % 400 == 0):</cline>
        <cline>               result = true</cline>
        <cline>            else:</cline>
        <cline>               result = false</cline>
    </block><block order="9">
        <cline>         else:</cline>
        <cline>            result = true</cline>
    </block><block order="5">
        <cline>      else:</cline>
        <cline>         result = false</cline>
    </block><block order="10">
        <cline>      print(result)</cline>
    </block><block order="7">
    </block></blocks></exercise>        
    </exercises>
</subsection>

    <program xml:id="ac-writeselect-we2-p1" interactive="activecode" language="python">
        <input></input>
    </program>
</section>